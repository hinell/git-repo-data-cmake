cmake_minimum_required(VERSION 3.16.3 FATAL_ERROR)
project(
  GitRepoData
  DESCRIPTION  "GitRepoData package provides utilities for git information"
  HOMEPAGE_URL "htts://github.com/hinell/gitrepodata-cmake"
  # Acces these via PROJECT_VERSION_MAJOR | .._MINOR | .._PATCH | .._TWEAK
  # Semver 2.0
  # VERSION # IMPORTED FROM TOP-LEVEL PROJECT, SEE BELOW
  LANGUAGES CXX
)

#---------------------------------------------------------------------------Misc
# Enable GraphViz custom targets
file(
  WRITE
  "${CMAKE_CURRENT_BINARY_DIR}/CMakeGraphVizOptions.cmake"
  "set(GRAPHVIZ_CUSTOM_TARGETS TRUE)"
)

#-----------------------------------------------------------Project-wide modules
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake/")
include_guard(GLOBAL)
include(CMakeFindDependencyMacro)
include(CMakeDependentOption)
include(GenerateExportHeader)
include(CMakePrintHelpers)
include(FeatureSummary)

include(GitRepoData RESULT_VARIABLE GITREPODATA_MODULE_PATH)
if(UNIX)
  include(GNUInstallDirs)
endif()

# find_package(Doxygen REQUIRED dot OPTIONAL_COMPONENTS mscgen dia)

#---------------------------------------------------------Set_package_properties

# This debugs generator expression
# add_custom_target(genexdebug COMMAND ${CMAKE_COMMAND} -E echo "RESULT: $<1:$ENV{GITRD_VERSION}>")

# Describe GitRepoProject
# Use feature_summary(...) to print information on that


#------------------------------------------------------------------------Install

set(PROJECT_VERSION_MAJOR 1)
set(PACKAGE_GROUP_NAME "${PROJECT_NAME}")

# Install *Config.cmake for a group of targets
#    <prefix>/<platform_dir>/<group_name>-<version>/<group_name>Config.cmake

set(PACKAGE_CONFIG_PATH  "${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_GROUP_NAME}Config.cmake")
set(PACKAGE_VERSION_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_GROUP_NAME}ConfigVersion.cmake")

file(WRITE "${PACKAGE_CONFIG_PATH}.in" "
# THIS FILE WAS AUTOMATICALLY GENERATED BY CMakeListst.txt script
# FOR THE @PROJECT_NAME@ @PROJECT_VERSION@ by al.neodim@gmail.com

################################################################################

include(\${CMAKE_CURRENT_LIST_DIR}/cmake/GitRepoData.cmake)
set_package_properties(
	GitRepoData
	PROPERTIES
	DESCRIPTION	\"A target with a git repository data and utilities for version updates\"
	# URL				TODO: [September 19, 2022] Add link
	# TYPE			RUNTIME,OPTIONAL,RECOMMENDED,REQUIRED|
	# PURPOSE		\"Project versioning\"
)
@PACKAGE_INIT@"
)

include(CMakePackageConfigHelpers)
configure_package_config_file(
	"${PACKAGE_CONFIG_PATH}.in"
	"${PACKAGE_CONFIG_PATH}"
	INSTALL_DESTINATION
		"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/${PACKAGE_GROUP_NAME}-${PROJECT_VERSION_MAJOR}/cmake/"
)
write_basic_package_version_file(
	"${PACKAGE_VERSION_PATH}"
	VERSION "1.0.0"
	COMPATIBILITY AnyNewerVersion
)
# Copy produced files into system dir
install(
	FILES
		"${PACKAGE_CONFIG_PATH}"
		"${PACKAGE_VERSION_PATH}"
	DESTINATION
		"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/${PACKAGE_GROUP_NAME}-${PROJECT_VERSION_MAJOR}/cmake/"
)
install(
	FILES
		"${GITREPODATA_MODULE_PATH}"
	DESTINATION
		"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/${PACKAGE_GROUP_NAME}-${PROJECT_VERSION_MAJOR}/cmake/cmake"
)
unset(PACKAGE_GROUP_NAME)

